{"version":3,"file":"static/js/168.50bacde1.chunk.js","mappings":"8SAQMA,E,MAAQC,GAAAA,OAAa,CACzBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIb,SAASC,IACP,OAAOL,EAAMM,IAAI,oBAAoBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,IAAR,GAC9C,CAED,SAASC,EAAmBC,GAC1B,OAAOX,EAAMM,IAAN,6BAAgCK,EAAhC,YAAgDJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,IAAR,GAChE,CACD,SAASG,EAAmBC,GAC1B,OAAOb,EAAMM,IAAN,gBAAmBO,EAAnB,MAA+BN,MAAK,SAAAC,GAAG,OAAIA,EAAIC,IAAR,GAC/C,CACD,SAASK,EAAWD,GAClB,OAAOb,EAAMM,IAAN,gBAAmBO,EAAnB,cAAuCN,MAAK,SAAAC,GAAG,OAAIA,EAAIC,IAAR,GACvD,CACD,SAASM,EAAcF,GACrB,OAAOb,EAAMM,IAAN,gBAAmBO,EAAnB,aACR,CAED,SAASG,EAAYH,GACnB,OAAOb,EAAMM,IAAN,gBAAmBO,EAAnB,YACR,C,8GCjCD,EAAuB,sBAAvB,EAAoD,sB,SCKrC,SAASI,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQP,GAAYQ,EAAAA,EAAAA,MAAZR,QAMR,OAJAS,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAkBV,GAASN,MAAK,SAAAC,GAAG,OAAIY,EAAWZ,EAAIC,KAAKe,QAAxB,GACpC,GAAE,CAACX,KAGF,iCACE,qCACA,eAAIY,UAAWC,EAAf,SACGP,GACCA,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,GAA5B,OACV,gBAAaL,UAAWC,EAAxB,WACE,yCAAeE,EAAeG,aAC9B,uBACGH,EAAeI,OAAf,kBACcJ,EAAeI,QAC1B,gCAEN,uBAAIH,MAPGC,EADC,QAcrB,C","sources":["Services/API.js","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\n// export default async function fetchMovies(name, page) {\n//   const url = 'https://api.themoviedb.org/3/trending/all/day';\n//   const key = '2686b3f0aebdd48d7f6093d290775aa4';\n//   const filter = `?api_key=${key}`;\n//   return await axios.get(`${url}${filter}`).then(res => res.data);\n// }\nconst AXIOS = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '2686b3f0aebdd48d7f6093d290775aa4',\n  },\n});\n\nfunction fetchTrendMovies() {\n  return AXIOS.get('trending/all/day').then(res => res.data);\n}\n\nfunction FeatchSearchMovies(query) {\n  return AXIOS.get(`search/movie?query=${query}&page=1`).then(res => res.data);\n}\nfunction FeatchMovieDetails(movieId) {\n  return AXIOS.get(`movie/${movieId}?`).then(res => res.data);\n}\nfunction FeatchCast(movieId) {\n  return AXIOS.get(`movie/${movieId}/credits?`).then(res => res.data);\n}\nfunction FeatchReviews(movieId) {\n  return AXIOS.get(`movie/${movieId}/reviews?`);\n}\n\nfunction FeatchVideo(movieId) {\n  return AXIOS.get(`movie/${movieId}/videos?`);\n}\nexport {\n  fetchTrendMovies,\n  FeatchSearchMovies,\n  FeatchMovieDetails,\n  FeatchCast,\n  FeatchReviews,\n  FeatchVideo,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"item\":\"Reviews_item__DJKij\"};","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from 'Services/API';\nimport css from '../Reviews/Reviews.module.css';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    API.FeatchReviews(movieId).then(res => setReviews(res.data.results));\n  }, [movieId]);\n\n  return (\n    <>\n      <h2>Reviews</h2>\n      <ul className={css.list}>\n        {reviews &&\n          reviews.map(({ author_details, content, id }) => (\n            <li key={id} className={css.item}>\n              <h3>{`Autor: ${author_details.username}`}</h3>\n              <p>\n                {author_details.rating\n                  ? `Rating: ${author_details.rating}`\n                  : 'no rating from this author'}\n              </p>\n              <p>{content}</p>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n}\n"],"names":["AXIOS","axios","baseURL","params","api_key","fetchTrendMovies","get","then","res","data","FeatchSearchMovies","query","FeatchMovieDetails","movieId","FeatchCast","FeatchReviews","FeatchVideo","Reviews","useState","reviews","setReviews","useParams","useEffect","API","results","className","css","map","author_details","content","id","username","rating"],"sourceRoot":""}